\author{Ferry Gaetan}
\author{Zigh Benjamin}
\title{Rapport de projet de compilation}

\begindocument

Voici le rapport du projet de compilation de M1 Informatique de l'université de Rouen pour l'année 2013/2014. Ce rapport a été généré en utilisant l'application MoHAiR, développée en lex et yacc.

\section{Présentation}

Pour ce projet, nous avons été chargés de développer une application de mise en page automatique. Cette application prenant en entrée un fichier source particulier contenant des marqueurs de mise en forme, devait produire en sortie un document structuré. Ce document devait pouvoir être composé de section et de sous section contenant du texte ainsi que des environnements de définitions.

\para 

L'application a été conçue en utilisant les outils flex et yacc pour l'analyse lexicale et syntaxique respectivement. 

\section{Fonctionnalités}

 Nous avions initialement créé une application qui produisait du texte brut. Cette application est fournie avec les sources du projet mais ne représente pas la version finale. 

En effet, notre version finale génère un document au format HTML5, format universellement compatible, facilement éditable et convertible. Nous avons repris la grammaire intégralement et l'avons enrichi à cette fin.

Nous commencerons donc par lister les fonctionnalités disponibles dans les deux versions, puis celles reservées à la version HTML.

\ssection{Les Sections}


Comme vous avez pu le constater, notre générateur permet de structurer le document en sections et sous-sections. Ces différentes parties sont numérotées automatiquement et peuvent avoir ou non un titre. 
\para
On les crée à l'aide des commandes \\section\{titre\} et \\ssection\{titre\}.

\ssection{Les Paragraphes}

Les paragraphes sont gérés automatiquement par l'application, néanmoins l'utilisateur peut, s'il le désire, créer un nouveau paragraphe à l'aide de la commande \\para. Les espaces et retours à la ligne superflus sont éliminés du code source. L'utilisateur peut donc présenter ses sources comme bon lui semble sans aucune influence sur le rendu final.

\ssection{Les Commentaires et l'Echappement}

Il est possible d'ajouter des commentaires au code qui n'apparaitront pas dans le document compilé à l'aide du caractère \%.
%D'ailleurs ceci est un commentaire et on ne le voit pas dans le rapport.
Pour afficher les caractères spéciaux tels que \\ et \%, il suffit de les précéder dans le code du caractère d'échappement "\\".

\ssection{Les Environnements}

Deux environnements sont disponibles actuellement dans MoHAiR, le lemme et la définition. Ils sont tous les deux numérotés automatiquement. 

\lemme{Voici un lemme}
On le débute avec \\lemme\{titre\} et on le termine avec \\end.
\end

\def{Voici une définition}
On la débute avec \\def\{titre\} et on la termine avec \\end.
\end

\ssection{Le Titre et Les Auteurs (HTML)}
Dans la version HTML, le document est précédé d'une partie "déclaration". Cette partie est optionelle et terminée par la commande \\begindocument. Dans les déclarations, on peut ajouter un ou plusieurs auteurs avec \\author et un titre de document avec \\title\{titre\}.

\ssection{Le Style (HTML)}
Il est possible de paramêtrer certains éléments du style de la page:
\para
- \\setindent\{entier\} permet de fixer l'indentation des nouveaux paragraphes (en mm).
\para
- \\setpagewidth\{entier\} permet de fixer la largeur de la page (en mm).
\para
- \\setsize\{element\}\{entier\} permet de fixer la taille de la police (en mm) pour divers éléments du document. 
\para 
Les éléments modifiables sont: title, section, ssection, env et text.

\section{Technique}
\ssection{Lex}

L'analyseur lexical est relativement simple. Deux expressions régulières définissent respectivement les mots et les nombres. Deux contextes déterminent respectivement si on est dans ou hors d'un commentaire et si on est dans la partie déclaration ou dans le document en lui même.
\para
Chaque commande renvoie un token propre à l'analyseur lexical, avec éventuellement une valeur associée.

\ssection{Yacc}

L'analyseur syntaxique représente la majeure partie du travail. Il est fourni en deux versions: générateur de texte et générateur de HTML. Les deux versions contiennent un programme C qui récupère un fichier source et le chemin vers où compiler afin de produire un fichier texte ou HTML.
\para
Les différentes valeurs réglables sont stockées sous formes de variables globales. De nombreuses fonctions sont déclarées en entête et appelées à divers endroits dans la grammaire.
\para
On utilise un \%union pour gérer les deux types valeurs lexicales possible (string et int). On utilise un \%type pour évaluer récursivement les valeurs des titres. Le texte est quand à lui évalué en flux pour des questions de buffer.
\para
Les auteurs sont stockés dans une liste chaînée qui est parcourue et libérée en même temps lors de la création de l'entête du document.


\ssection{Compilation}

La version texte comprend analyse.y et analyse.lex tandis que la version HTML est basée sur analysehtml.y et analysehtml.lex.
\para 
On compile d'abord les fichiers lex, puis les yacc, puis les fichiers C.
